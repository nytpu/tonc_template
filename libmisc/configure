#!/bin/sh
# POSIX shell configure script for libmisc
#
#
# Copyright (c) 2021 nytpu <alex [at] nytpu.com>
# SPDX-License-Identifier: BSL-1.0
# The orginal source for this file is available at <https://git.sr.ht/~nytpu/genc>.
#
# Permission is hereby granted, free of charge, to any person or organization
# obtaining a copy of the software and accompanying documentation covered by
# this license (the "Software") to use, reproduce, display, distribute,
# execute, and transmit the Software, and to prepare derivative works of the
# Software, and to permit third-parties to whom the Software is furnished to
# do so, all subject to the following:
#
# The copyright notices in the Software and this entire statement, including
# the above license grant, this restriction and the following disclaimer, must
# be included in all copies of the Software, in whole or in part, and all
# derivative works of the Software, unless such copies or derivative works are
# solely in the form of machine-executable object code generated by a source
# language processor.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
# SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
# FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
set -eu

# redirect stdout to config.mk beyond this point
exec >config.mk

echo "# Configuration for makefile for libmisc"
echo "# This file was generated automatically by configure. Don't edit."

while getopts "h" opt; do
	case "${opt}" in
	(h)
		exec 1>&2
		printf "usage: [ENV=VAR] %s\n" "$0"
		printf "\nsupported environment variables (default if variable unset in parenthesis):\n"
		printf "\tCC       command to invoke the C99 compiler (cc)\n"
		printf "\tCFLAGS   additional flags for the C compiler\n"
		printf "\tAR       command to invoke the ar archiver (ar)\n"
		printf "\tARFLAGS  additional flags for the ar archiver\n"
		exit 0
		;;
	(?)
		printf "%s: invalid option '%c'\n" "$0" "${opt}" >&2
		exit 1
		;;
	esac
done

[ -n "${CC:-}" ] && printf "CC = %s\n" "${CC}"
[ -n "${CFLAGS:-}" ] && printf "CFLAGS += %s\n" "${CFLAGS}"
[ -n "${AR:-}" ] && printf "AR = %s\n" "${AR}"
[ -n "${AFFLAGS:-}" ] && printf "ARFLAGS += %s\n" "${ARFLAGS}"

exit 0
